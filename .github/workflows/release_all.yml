name: Build a new release

on:
  push:
    tags:
    - 'v*.*.*.*' # v0.0.0.0

jobs:
  build:
    name: Build all
    uses: ./.github/workflows/build_all.yml
  release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions: write-all
    steps:
    - name: Get tag version
      id: get_tag
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    - name: Packing linux artifact (x64)
      run: |
          tar cvzf  msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-linux-x64-bin.tar.gz msxbas2rom-linux-x64-bin/*
    - name: Packing macos artifact (x86_64)
      run: |
          sudo apt-get install hfsprogs
          dd if=/dev/zero of=msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmg bs=1M count=3 status=progress
          mkfs.hfsplus -v msxbas2rom msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmg
          mkdir -pv mount
          sudo mount -t hfsplus -o force,rw,loop msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmg mount
          sudo cp -av msxbas2rom-mac-x86_64-bin/* mount
          sudo umount mount
          gzip -k msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmg
          zip --junk-paths msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.zip msxbas2rom-mac-x86_64-bin/*
    - name: Packing windows artifact (x32)
      run: |
          zip --junk-paths msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x32-bin.zip msxbas2rom-windows-x32-bin/*
    - name: Packing windows artifact (x64)
      run: |
          zip --junk-paths msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x64-bin.zip msxbas2rom-windows-x64-bin/*
    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ steps.get_tag.outputs.VERSION }}
        tag_name: ${{ github.ref }}
        body: |
            Changes in this release, run:
            msxbas2rom --ver
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload linux artifact (x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-linux-x64-bin.tar.gz
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-linux-x64-bin.tar.gz
        asset_content_type: application/gzip
    - name: Upload macos artifact (x86_64) - zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.zip
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.zip
        asset_content_type: application/gzip
    - name: Upload macos artifact (x86_64) - dmz
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmz
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmz
        asset_content_type: application/gzip
    - name: Upload macos artifact (x86_64) - dmz.gz
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmz.gz
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-mac-x86_64-bin.dmz.gz
        asset_content_type: application/gzip
    - name: Upload windows artifact (x32)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x32-bin.zip
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x32-bin.zip
        asset_content_type: application/gzip
    - name: Upload windows artifact (x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x64-bin.zip
        asset_name: msxbas2rom-${{ steps.get_tag.outputs.VERSION }}-windows-x64-bin.zip
        asset_content_type: application/gzip

